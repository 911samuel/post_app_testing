name: Flutter CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.22.0'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel: [stable, beta]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ matrix.channel }}

      - name: Restore Flutter Pub Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

      - name: Build APK (debug)
        if: github.ref == 'refs/heads/main' && matrix.channel == 'stable'
        run: flutter build apk --debug

      - name: Upload APK
        if: github.ref == 'refs/heads/main' && matrix.channel == 'stable'
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
